// <auto-generated />
using System;
using GameServer.Utils;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameServer.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20231212150011_MNRSupport")]
    partial class MNRSupport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GameServer.Models.PlayerData.ActivityEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AllusionId")
                        .HasColumnType("int");

                    b.Property<string>("AllusionType")
                        .HasColumnType("longtext");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageMD5")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURL")
                        .HasColumnType("longtext");

                    b.Property<int>("List")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<string>("Topic")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.AnnouncementData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("longtext");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Games.GameData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameState")
                        .HasColumnType("int");

                    b.Property<int>("GameType")
                        .HasColumnType("int");

                    b.Property<int>("HostPlayerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRanked")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("NumberLaps")
                        .HasColumnType("int");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<string>("Privacy")
                        .HasColumnType("longtext");

                    b.Property<string>("SpeedClass")
                        .HasColumnType("longtext");

                    b.Property<int>("Track")
                        .HasColumnType("int");

                    b.Property<string>("TrackGroup")
                        .HasColumnType("longtext");

                    b.Property<int>("TrackIdx")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostPlayerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Games.GamePlayerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GameState")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GamePlayers");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Games.GamePlayerStatsData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Bank")
                        .HasColumnType("int");

                    b.Property<float>("BestLapTime")
                        .HasColumnType("float");

                    b.Property<int>("CharacterIdx")
                        .HasColumnType("int");

                    b.Property<float>("Deviation")
                        .HasColumnType("float");

                    b.Property<int>("FinishPlace")
                        .HasColumnType("int");

                    b.Property<float>("FinishTime")
                        .HasColumnType("float");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IsWinner")
                        .HasColumnType("int");

                    b.Property<int>("KartIdx")
                        .HasColumnType("int");

                    b.Property<int>("LapsCompleted")
                        .HasColumnType("int");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("LocationTag")
                        .HasColumnType("longtext");

                    b.Property<float>("LongestDrift")
                        .HasColumnType("float");

                    b.Property<float>("LongestHangTime")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("MusicIdx")
                        .HasColumnType("int");

                    b.Property<int>("NumKills")
                        .HasColumnType("int");

                    b.Property<int>("PlaygroupSize")
                        .HasColumnType("int");

                    b.Property<float>("Points")
                        .HasColumnType("float");

                    b.Property<float>("Score")
                        .HasColumnType("float");

                    b.Property<int>("Stat1")
                        .HasColumnType("int");

                    b.Property<int>("Stat2")
                        .HasColumnType("int");

                    b.Property<int>("TrackIdx")
                        .HasColumnType("int");

                    b.Property<int>("TrackPlatform")
                        .HasColumnType("int");

                    b.Property<float>("Volatility")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GamePlayerStats");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.GriefReportData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BadRectBottom")
                        .HasColumnType("longtext");

                    b.Property<string>("BadRectTop")
                        .HasColumnType("longtext");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext");

                    b.Property<string>("Context")
                        .HasColumnType("longtext");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GriefReports");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.HeartedProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("HeartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HeartedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMNR")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeartedUserId");

                    b.HasIndex("UserId");

                    b.ToTable("HeartedProfiles");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.MailMessageData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AttachmentReference")
                        .HasColumnType("longtext");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("HasForwarded")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("HasReplied")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientList")
                        .HasColumnType("longtext");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("MailMessages");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCommentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerComments");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCommentRatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerCommentId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCommentId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCommentRatings");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerComplaintData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerComplaints");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreationComplaintData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerCreationComplaints");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.HeartedPlayerCreation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("HeartedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HeartedPlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeartedPlayerCreationId");

                    b.HasIndex("UserId");

                    b.ToTable("HeartedPlayerCreations");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationBookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BookmarkedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("BookmarkedPlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookmarkedPlayerCreationId");

                    b.HasIndex("UserId");

                    b.ToTable("PlayerCreationBookmarks");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationCommentData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreationComments");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationCommentRatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationCommentId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationCommentId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreationCommentRatings");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", b =>
                {
                    b.Property<int>("PlayerCreationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AI")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AssociatedCoordinates")
                        .HasColumnType("longtext");

                    b.Property<string>("AssociatedItemIds")
                        .HasColumnType("longtext");

                    b.Property<string>("AssociatedUsernames")
                        .HasColumnType("longtext");

                    b.Property<bool>("AutoReset")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("AutoTags")
                        .HasColumnType("longtext");

                    b.Property<bool>("BattleFriendlyFire")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("BattleKillCount")
                        .HasColumnType("int");

                    b.Property<int>("BattleTimeLimit")
                        .HasColumnType("int");

                    b.Property<float>("BestLapTime")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DLCKeys")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstPublished")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsMNR")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsRemixable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsTeamPick")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastPublished")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LevelMode")
                        .HasColumnType("int");

                    b.Property<float>("LongestDrift")
                        .HasColumnType("float");

                    b.Property<float>("LongestHangTime")
                        .HasColumnType("float");

                    b.Property<int>("MaxHumans")
                        .HasColumnType("int");

                    b.Property<int>("ModerationStatus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("NumLaps")
                        .HasColumnType("int");

                    b.Property<int>("NumRacers")
                        .HasColumnType("int");

                    b.Property<int>("OriginalPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("ParentCreationId")
                        .HasColumnType("int");

                    b.Property<int>("ParentPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("RaceType")
                        .HasColumnType("int");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<bool>("RequiresDLC")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ScoreboardMode")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.Property<int>("TrackTheme")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserTags")
                        .HasColumnType("longtext");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("WeaponSet")
                        .HasColumnType("longtext");

                    b.HasKey("PlayerCreationId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreations");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationDownload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DownloadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.ToTable("PlayerCreationDownloads");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreationPoints");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationRaceStarted", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.ToTable("PlayerCreationRacesStarted");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationRatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreationRatings");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreationReviews");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationReviewRatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationReviewId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationReviewId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerCreationReviewRatings");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationUniqueRacer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.ToTable("PlayerCreationUniqueRacers");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PlayerCreationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ViewedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCreationId");

                    b.ToTable("PlayerCreationViews");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerExperiencePoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerExperiencePoints");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerPoints");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerRatingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerRatings");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("BestLapTime")
                        .HasColumnType("float");

                    b.Property<int>("CharacterIdx")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("FinishTime")
                        .HasColumnType("float");

                    b.Property<string>("GhostCarDataMD5")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsMNR")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("KartIdx")
                        .HasColumnType("int");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("Platform")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("PlaygroupSize")
                        .HasColumnType("int");

                    b.Property<float>("Points")
                        .HasColumnType("float");

                    b.Property<int>("SubGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SubKeyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SubKeyId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CharacterIdx")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("KartIdx")
                        .HasColumnType("int");

                    b.Property<float>("LongestDrift")
                        .HasColumnType("float");

                    b.Property<float>("LongestHangTime")
                        .HasColumnType("float");

                    b.Property<int>("LongestWinStreak")
                        .HasColumnType("int");

                    b.Property<int>("OnlineDisconnected")
                        .HasColumnType("int");

                    b.Property<int>("OnlineFinished")
                        .HasColumnType("int");

                    b.Property<int>("OnlineFinishedLastWeek")
                        .HasColumnType("int");

                    b.Property<int>("OnlineFinishedThisWeek")
                        .HasColumnType("int");

                    b.Property<int>("OnlineForfeit")
                        .HasColumnType("int");

                    b.Property<int>("OnlineQuits")
                        .HasColumnType("int");

                    b.Property<int>("OnlineRaces")
                        .HasColumnType("int");

                    b.Property<int>("OnlineRacesLastWeek")
                        .HasColumnType("int");

                    b.Property<int>("OnlineRacesThisWeek")
                        .HasColumnType("int");

                    b.Property<int>("OnlineWins")
                        .HasColumnType("int");

                    b.Property<int>("OnlineWinsLastWeek")
                        .HasColumnType("int");

                    b.Property<int>("OnlineWinsThisWeek")
                        .HasColumnType("int");

                    b.Property<ulong>("PSNID")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("PlayedMNR")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PolicyAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Quota")
                        .HasColumnType("int");

                    b.Property<string>("Quote")
                        .HasColumnType("longtext");

                    b.Property<ulong>("RPCNID")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.Property<int>("WinStreak")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Games.GameData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("HostPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Games.GamePlayerData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.Games.GameData", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Games.GamePlayerStatsData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.Games.GameData", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.GriefReportData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.HeartedProfile", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "HeartedUser")
                        .WithMany()
                        .HasForeignKey("HeartedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeartedUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.MailMessageData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCommentData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCommentRatingData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCommentData", "Comment")
                        .WithMany()
                        .HasForeignKey("PlayerCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerComplaintData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreationComplaintData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "PlayerCreation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("PlayerCreation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.HeartedPlayerCreation", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "HeartedCreation")
                        .WithMany()
                        .HasForeignKey("HeartedPlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeartedCreation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationBookmark", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "BookmarkedCreation")
                        .WithMany()
                        .HasForeignKey("BookmarkedPlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookmarkedCreation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationCommentData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationCommentRatingData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationCommentData", "Comment")
                        .WithMany()
                        .HasForeignKey("PlayerCreationCommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Author")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationDownload", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationPoint", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationRaceStarted", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationRatingData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationReview", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationReviewRatingData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationReview", "Review")
                        .WithMany()
                        .HasForeignKey("PlayerCreationReviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Review");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationUniqueRacer", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationView", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("PlayerCreationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerExperiencePoint", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerPoint", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.PlayerRatingData", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameServer.Models.PlayerData.Score", b =>
                {
                    b.HasOne("GameServer.Models.PlayerData.User", "User")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameServer.Models.PlayerData.PlayerCreations.PlayerCreationData", "Creation")
                        .WithMany()
                        .HasForeignKey("SubKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creation");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
